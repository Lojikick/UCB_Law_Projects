{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\baisa\\\\OneDrive\\\\Desktop\\\\TechyProjects\\\\UCBLaw\\\\Fall2021\\\\training\\\\temperature-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; //All the comments in this starter code are suggestions, feel free to discard them.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  //use 'useState' to create variables for the temperature value and the color of the thermostat\n  const [counter, setCounter] = useState(0); //code a function for how the color and numbers in the thermostat should be chnaged when the temperature is increased\n\n  const increaseTemp = () => {}; //code a function for how the thermostat should chnage when the temperature is decreased\n\n\n  const decreaseTemp = () => {};\n\n  const name = null;\n  const isUserLogged = true; //Component - code that returns or renders jsx\n\n  useEffect(() => {\n    setCounter(0);\n  }, []); //Put what you want to see on the webpage inside return. Use <div> and <button> tags.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCounter(prevCount => prevCount - 1),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCounter(prevCount => prevCount + 1),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"uPkTgB8PBsujXy6a5mXWSxFNaD8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","App","counter","setCounter","increaseTemp","decreaseTemp","name","isUserLogged","prevCount"],"sources":["C:/Users/baisa/OneDrive/Desktop/TechyProjects/UCBLaw/Fall2021/training/temperature-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n\r\n//All the comments in this starter code are suggestions, feel free to discard them.\r\n\r\nconst App = () => {\r\n\r\n  //use 'useState' to create variables for the temperature value and the color of the thermostat\r\n  const [counter, setCounter] = useState(0);\r\n\r\n\r\n\r\n  //code a function for how the color and numbers in the thermostat should be chnaged when the temperature is increased\r\n  const increaseTemp = () => {\r\n\r\n  };\r\n\r\n  //code a function for how the thermostat should chnage when the temperature is decreased\r\n  const decreaseTemp = () => {\r\n\r\n  };\r\n\r\n  const name = null;\r\n  const isUserLogged = true;\r\n  //Component - code that returns or renders jsx\r\n\r\n  useEffect(() => {\r\n    setCounter(0);\r\n}, []);\r\n\r\n\r\n//Put what you want to see on the webpage inside return. Use <div> and <button> tags.\r\n  return (\r\n    <div className=\"App\">\r\n      <button onClick={() => setCounter((prevCount) => prevCount -1)}>-</button>\r\n      <h1>{counter}</h1>\r\n      <button onClick={() => setCounter((prevCount) => prevCount +1)}>+</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAGA;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAEhB;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,CAAD,CAAtC,CAHgB,CAOhB;;EACA,MAAMK,YAAY,GAAG,MAAM,CAE1B,CAFD,CARgB,CAYhB;;;EACA,MAAMC,YAAY,GAAG,MAAM,CAE1B,CAFD;;EAIA,MAAMC,IAAI,GAAG,IAAb;EACA,MAAMC,YAAY,GAAG,IAArB,CAlBgB,CAmBhB;;EAEAP,SAAS,CAAC,MAAM;IACdG,UAAU,CAAC,CAAD,CAAV;EACH,CAFU,EAER,EAFQ,CAAT,CArBgB,CA0BlB;;EACE,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAQ,OAAO,EAAE,MAAMA,UAAU,CAAEK,SAAD,IAAeA,SAAS,GAAE,CAA3B,CAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UAAKN;IAAL;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,OAAO,EAAE,MAAMC,UAAU,CAAEK,SAAD,IAAeA,SAAS,GAAE,CAA3B,CAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CAlCD;;GAAMP,G;;KAAAA,G;AAoCN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}