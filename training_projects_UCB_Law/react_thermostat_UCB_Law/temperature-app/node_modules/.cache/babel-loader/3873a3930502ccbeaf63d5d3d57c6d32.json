{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\baisa\\\\OneDrive\\\\Desktop\\\\TechyProjects\\\\UCBLaw\\\\Fall2021\\\\training\\\\temperature-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Stylesheet from './Stylesheet';\nimport './index.css'; //All the comments in this starter code are suggestions, feel free to discard them.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  //use 'useState' to create variables for the temperature value and the color of the thermostat\n  const [temp, setTemp] = useState(0);\n  const [color, setColor] = useState(0);\n  const [colors, setColors] = useState([{\n    color: \"third\"\n  }, {\n    color: \"secondary\"\n  }, {\n    color: \"first\"\n  }]); //code a function for how the color and numbers in the thermostat should be chnaged when the temperature is increased\n\n  const increaseTemp = () => {\n    setTemp(prevTemp => prevTemp - 1);\n  }; //code a function for how the thermostat should chnage when the temperature is decreased\n\n\n  const decreaseTemp = () => {\n    setTemp(prevTemp => prevTemp + 1);\n  };\n\n  const name = null;\n  const isUserLogged = true; //Component - code that returns or renders jsx\n\n  useEffect(() => {\n    setTemp(0); //alert(\" Youve changed temp to \" + temp);\n  }, []); //to switch colors simply need to use props!\n  //Put what you want to see on the webpage inside return. Use <div> and <button> tags.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Stylesheet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => decreaseTemp(),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"secondary\",\n      children: temp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => increaseTemp(),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"372Rf49NwHnFpwp9/hHq7HeTCUE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Stylesheet","App","temp","setTemp","color","setColor","colors","setColors","increaseTemp","prevTemp","decreaseTemp","name","isUserLogged"],"sources":["C:/Users/baisa/OneDrive/Desktop/TechyProjects/UCBLaw/Fall2021/training/temperature-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Stylesheet from './Stylesheet';\r\nimport './index.css'\r\n\r\n//All the comments in this starter code are suggestions, feel free to discard them.\r\n\r\nconst App = () => {\r\n\r\n  //use 'useState' to create variables for the temperature value and the color of the thermostat\r\n  const [temp, setTemp] = useState(0);\r\n  const [color, setColor] = useState(0);\r\n  const [colors, setColors] = useState(\r\n    [\r\n      {color: \"third\"},\r\n      {color: \"secondary\"},\r\n      {color: \"first\"}\r\n    ]\r\n  );\r\n\r\n  \r\n\r\n\r\n  //code a function for how the color and numbers in the thermostat should be chnaged when the temperature is increased\r\n  const increaseTemp = () => {\r\n    setTemp((prevTemp) => prevTemp -1);\r\n  };\r\n\r\n  //code a function for how the thermostat should chnage when the temperature is decreased\r\n  const decreaseTemp = () => {\r\n    setTemp((prevTemp) => prevTemp +1);\r\n  };\r\n\r\n  const name = null;\r\n  const isUserLogged = true;\r\n  //Component - code that returns or renders jsx\r\n\r\n  useEffect(() => {\r\n    setTemp(0);\r\n    //alert(\" Youve changed temp to \" + temp);\r\n}, []);\r\n\r\n//to switch colors simply need to use props!\r\n\r\n//Put what you want to see on the webpage inside return. Use <div> and <button> tags.\r\n  return (\r\n    <div className=\"App\">\r\n      <Stylesheet />\r\n      <button onClick={() => decreaseTemp()}>-</button>\r\n      <h1 className={\"secondary\"}>{temp}</h1>\r\n      <button onClick={() => increaseTemp()}>+</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,aAAP,C,CAEA;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAEhB;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAD,CAAlC;EACA,MAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAClC,CACE;IAACM,KAAK,EAAE;EAAR,CADF,EAEE;IAACA,KAAK,EAAE;EAAR,CAFF,EAGE;IAACA,KAAK,EAAE;EAAR,CAHF,CADkC,CAApC,CALgB,CAgBhB;;EACA,MAAMI,YAAY,GAAG,MAAM;IACzBL,OAAO,CAAEM,QAAD,IAAcA,QAAQ,GAAE,CAAzB,CAAP;EACD,CAFD,CAjBgB,CAqBhB;;;EACA,MAAMC,YAAY,GAAG,MAAM;IACzBP,OAAO,CAAEM,QAAD,IAAcA,QAAQ,GAAE,CAAzB,CAAP;EACD,CAFD;;EAIA,MAAME,IAAI,GAAG,IAAb;EACA,MAAMC,YAAY,GAAG,IAArB,CA3BgB,CA4BhB;;EAEAb,SAAS,CAAC,MAAM;IACdI,OAAO,CAAC,CAAD,CAAP,CADc,CAEd;EACH,CAHU,EAGR,EAHQ,CAAT,CA9BgB,CAmClB;EAEA;;EACE,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,UAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAE,MAAMO,YAAY,EAAnC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAI,SAAS,EAAE,WAAf;MAAA,UAA6BR;IAA7B;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAQ,OAAO,EAAE,MAAMM,YAAY,EAAnC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CA9CD;;GAAMP,G;;KAAAA,G;AAgDN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}